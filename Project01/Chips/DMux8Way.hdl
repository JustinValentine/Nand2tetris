/* 8-way Demultiplexor */
/* Channels the input to one out of eight outputs */
/* sel==000 -> out={in, 0, 0, 0, 0, 0, 0, 0} */
/* sel==001 -> out={0, in, 0, 0, 0, 0, 0, 0} */
/* sel==010 -> out={0, 0, in, 0, 0, 0, 0, 0} */
/* sel==011 -> out={0, 0, 0, in, 0, 0, 0, 0} */
/* sel==100 -> out={0, 0, 0, 0, in, 0, 0, 0} */
/* sel==101 -> out={0, 0, 0, 0, 0, in, 0, 0} */
/* sel==110 -> out={0, 0, 0, 0, 0, 0, in, 0} */
/* sel==111 -> out={0, 0, 0, 0, 0, 0, 0, in} */

CHIP DMux8Way {

    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux(in=in, sel=sel[2], a=c0, b=c1);
    DMux4Way(in=c0, sel[0]=sel[0], sel[1]=sel[1], a=a, b=b, c=c, d=d);
    DMux4Way(in=c1, sel[0]=sel[0], sel[1]=sel[1], a=e, b=f, c=g, d=h);
    
}

